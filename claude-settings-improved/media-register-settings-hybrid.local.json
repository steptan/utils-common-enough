{
  "permissions": {
    "allow": [
      "// ACT (GitHub Actions Locally) - Keep wildcards for CI/CD tool",
      "act",
      "Bash(act:*)",
      
      "// GitHub CLI - Keep wildcards for workflow management",
      "Bash(gh workflow:*)",
      "Bash(gh run:*)",
      "Bash(gh actions:*)",
      
      "// Testing - Keep wildcards for test commands",
      "Bash(npm test:*)",
      "Bash(npm run test:*)",
      "Bash(npm run lint)",
      "Bash(npm run build)",
      "Bash(npm run dev)",
      "Bash(npm run start)",
      "Bash(jest:*)",
      "Bash(npm run typecheck)",
      
      "// Development Tools - Scoped to project directories",
      "Bash(node ./src/*)",
      "Bash(node ./scripts/*)",
      "Bash(node ./tests/*)",
      "Bash(npm install)",
      "Bash(npm ci)",
      "Bash(npm list:*)",
      "Bash(npm run:*)",
      "Bash(npx:*)",
      
      "// Git Operations - Keep wildcards for safe operations",
      "Bash(git status)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git show:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git commit -m *)",
      "Bash(git push origin)",
      "Bash(git pull origin)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "Bash(git stash:*)",
      
      "// Git Submodule Operations - Unique to media-register",
      "Bash(git submodule:*)",
      "Bash(git update-subs)",
      "Bash(git push-all)",
      "Bash(git pushall)",
      "Bash(git status-all)",
      
      "// AWS CLI - Project-scoped with wildcards",
      "Bash(aws s3:* s3://media-register-*)",
      "Bash(aws cloudformation:* --stack-name media-register-*)",
      "Bash(aws lambda:* --function-name media-register-*)",
      "Bash(aws dynamodb:* --table-name media-register-*)",
      "Bash(aws apigateway:* media-register-*)",
      "Bash(aws iam list-*)",
      "Bash(aws sts get-caller-identity)",
      
      "// File Operations - Keep wildcards for read operations",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(sort:*)",
      "Bash(diff:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(wc:*)",
      
      "// File Write Operations - Scoped to project",
      "Bash(mkdir -p ./*)",
      "Bash(cp ./* ./*)",
      "Bash(mv ./* ./*)",
      "Bash(rm ./dist/*)",
      "Bash(rm ./tmp/*)",
      "Bash(rm ./temp/*)",
      "Bash(rm ./*.tmp)",
      "Bash(rm ./*.log)",
      "Bash(touch ./*)",
      "Bash(chmod +x ./scripts/*)",
      
      "// Python - Scoped execution",
      "Bash(python ./scripts/*.py:*)",
      "Bash(python ./deploy/*.py:*)",
      "Bash(python ./tests/*.py)",
      "Bash(python -m pytest:*)",
      "Bash(python3 ./scripts/*.py:*)",
      "Bash(python3 ./deploy/*.py:*)",
      "Bash(python3 ./tests/*.py)",
      "Bash(python3 -m pytest:*)",
      "Bash(pip install -r requirements.txt)",
      "Bash(pip list)",
      "Bash(pip freeze)",
      
      "// Shell Operations",
      "Bash(source ./*)",
      
      "// Project-specific Tools and Scripts",
      "Bash(./scripts/*.sh:*)",
      "Bash(./scripts/setup-git-submodules.sh)",
      "Bash(./scripts/local-test.sh:*)",
      "Bash(./scripts/run-ci-locally.sh:*)",
      "Bash(./scripts/setup-github-secrets.sh)",
      "Bash(project-utils:*)",
      "Bash(project-deploy --project media-register *)",
      "Bash(project-test --project media-register *)",
      
      "// Build tools",
      "Bash(make:*)",
      "Bash(tsc:*)",
      "Bash(npx tsc:*)",
      
      "// Environment info",
      "Bash(env | grep *)",
      "Bash(which:*)",
      "Bash(type:*)",
      
      "// Process management - Project scoped",
      "Bash(ps aux | grep media-register*)",
      "Bash(pkill -f media-register-*)",
      
      "// Timeout for long-running commands",
      "Bash(timeout:*)"
    ],
    "deny": [
      "// Dangerous System Operations",
      "Bash(rm -rf /*)",
      "Bash(rm -rf ~/*)",
      "Bash(rm -rf ../*)",
      "Bash(sudo:*)",
      "Bash(chmod 777:*)",
      "Bash(chown:*)",
      
      "// System Package Managers",
      "Bash(brew:*)",
      "Bash(apt-get:*)",
      "Bash(apt:*)",
      "Bash(pip install:*)",
      "Bash(npm install -g:*)",
      
      "// Sensitive Files",
      "Bash(*:~/.aws/*)",
      "Bash(*:~/.ssh/*)",
      "Bash(*:.env)",
      "Bash(*:*/.git/config)",
      
      "// Destructive Git Operations",
      "Bash(git reset --hard:*)",
      "Bash(git push --force:*)",
      "Bash(git push -f:*)",
      "Bash(git clean -fd:*)",
      
      "// Dangerous NPM Operations",
      "Bash(npm publish:*)",
      "Bash(npm unpublish:*)",
      "Bash(npm access:*)",
      "Bash(npm token:*)",
      "Bash(npm login:*)",
      
      "// Dangerous AWS Operations",
      "Bash(aws iam create-*)",
      "Bash(aws iam delete-*)",
      "Bash(aws iam attach-*)",
      "Bash(aws iam put-*)",
      "Bash(aws s3 rm:* --recursive)",
      "Bash(aws cloudformation delete-stack:*)",
      "Bash(aws ec2 terminate-instances:*)",
      "Bash(aws:* --profile:*)",
      
      "// Network Operations",
      "Bash(curl -X POST:*)",
      "Bash(curl -X DELETE:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      
      "// Code Execution Outside Project",
      "Bash(python /*)",
      "Bash(python ~/*)",
      "Bash(python ../*)",
      "Bash(node /*)",
      "Bash(node ~/*)",
      "Bash(node ../*)"
    ]
  }
}